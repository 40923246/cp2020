<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>作業進度</h1>
<p style="text-align: left;"><strong></strong></p>
<table style="width: 569px;">
<tbody>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;"><strong>Week</strong></td>
<td style="width: 372px; height: 25px; text-align: center;"><strong>進度目標</strong></td>
<td style="width: 89px; height: 25px; text-align: center;"><strong>完成進度</strong></td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W1</td>
<td style="width: 372px; height: 25px; text-align: center;">建立Github倉儲</td>
<td style="width: 89px; height: 25px; text-align: center;">已完成</td>
</tr>
<tr style="height: 26px;">
<td style="width: 86px; height: 26px; text-align: center;">W2</td>
<td style="width: 372px; height: 26px; text-align: center;">建立網頁</td>
<td style="width: 89px; height: 26px; text-align: center;">已完成</td>
</tr>
<tr style="height: 26px;">
<td style="width: 86px; height: 26px; text-align: center;">W3</td>
<td style="width: 372px; height: 26px; text-align: center;">與組員分配討論HW1內容</td>
<td style="width: 89px; height: 26px; text-align: center;">已完成</td>
</tr>
<tr style="height: 26px;">
<td style="width: 86px; height: 26px; text-align: center;">W4</td>
<td style="width: 372px; height: 26px; text-align: center;">建立PC Hardware帳號</td>
<td style="width: 89px; height: 26px; text-align: center;">已完成</td>
</tr>
<tr style="height: 26px;">
<td style="width: 86px; height: 26px; text-align: center;">W5</td>
<td style="width: 372px; height: 26px; text-align: center;">將<span>PC Hardware PCH17資料完成英翻中放至個人網頁</span></td>
<td style="width: 89px; height: 26px; text-align: center;">已完成</td>
</tr>
<tr style="height: 26px;">
<td style="width: 86px; height: 26px; text-align: center;">W6</td>
<td style="width: 372px; height: 26px; text-align: center;"><span>完成HW1</span></td>
<td style="width: 89px; height: 26px; text-align: center;">已完成</td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W7</td>
<td style="width: 372px; height: 25px; text-align: center;">Kaggle的作業</td>
<td style="width: 89px; height: 25px; text-align: center;">已完成</td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W8</td>
<td style="width: 372px; height: 25px; text-align: center;"><span>Kaggle python</span></td>
<td style="width: 89px; height: 25px; text-align: center;">已完成</td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W9</td>
<td style="width: 372px; height: 25px; text-align: center;">期中考</td>
<td style="width: 89px; height: 25px; text-align: center;">無</td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W10</td>
<td style="width: 372px; height: 25px; text-align: center;">HW3分配作業</td>
<td style="width: 89px; height: 25px; text-align: center;">已完成</td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W11</td>
<td style="width: 372px; height: 25px; text-align: center;">完成HW2-1</td>
<td style="width: 89px; height: 25px; text-align: center;">已完成</td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W12</td>
<td style="width: 372px; height: 25px; text-align: center;">HW1上傳分組網站</td>
<td style="width: 89px; height: 25px; text-align: center;">已完成</td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W13</td>
<td style="width: 372px; height: 25px; text-align: center;">HW3剩餘作業分配</td>
<td style="width: 89px; height: 25px; text-align: center;">已完成</td>
</tr>
<tr style="height: 25px;">
<td style="width: 86px; height: 25px; text-align: center;">W14</td>
<td style="width: 372px; height: 25px; text-align: center;">修cmsimde</td>
<td style="width: 89px; height: 25px; text-align: center;">已完成</td>
</tr>
<tr style="height: 25.6562px;">
<td style="width: 86px; height: 25.6562px; text-align: center;">W15</td>
<td style="width: 372px; height: 25.6562px; text-align: center;">上傳作業到分組網站</td>
<td style="width: 89px; height: 25.6562px; text-align: center;">未完成</td>
</tr>
<tr style="height: 25.6562px;">
<td style="width: 86px; height: 25.6562px; text-align: center;">W16</td>
<td style="width: 372px; height: 25.6562px; text-align: center;">完成HW3</td>
<td style="width: 89px; height: 25.6562px; text-align: center;">未完成</td>
</tr>
<tr style="height: 25.6562px;">
<td style="width: 86px; height: 25.6562px; text-align: center;">W17</td>
<td style="width: 372px; height: 25.6562px; text-align: center;"></td>
<td style="width: 89px; height: 25.6562px; text-align: center;"></td>
</tr>
<tr style="height: 25.6562px;">
<td style="width: 86px; height: 25.6562px; text-align: center;">W18</td>
<td style="width: 372px; height: 25.6562px; text-align: center;"></td>
<td style="width: 89px; height: 25.6562px; text-align: center;"></td>
</tr>
</tbody>
</table>
<h1>HW1</h1>
<p>心得...</p>
<p>有夠麻煩的東西</p>
<p>不做了 不做了...</p>
<h2>PC Hardware</h2>
<p>Unit5:Notebooks and Laptops</p>
<p>單元5:筆記本電腦</p>
<h3>PCH 17 Notebook Features and Components</h3>
<p><span style="color: #000000;">PCH 17 筆記本功能和組件</span></p>
<p><span style="color: #000000;">p122</span></p>
<p><span title="Quick scroll up">Overview 總覽</span></p>
<p><span title="Quick scroll up">In this module, we will discuss the terms notebook, laptop, and netbook, and show how all three items are similar in functionality and use. We will compare and contrast these devices in terms of their size, weight, and capabilities. Next, we will cover the components that are commonly found in various notebooks, including the LCD panel, switches, and power inverters. Finally, we will discuss the various indications that a component is failing and how to solve the issues associated with faulty components.</span></p>
<p><span title="Quick scroll up">在本模塊中，我們將討論筆記本，筆記本電腦和上網本這兩個術語，並說明這三個項目在功能和用途上如何相似。 我們將在尺寸，重量和功能方面對這些設備進行比較和對比。 接下來，我們將介紹各種筆記本電腦中常見的組件，包括LCD面板，開關和電源逆變器。 最後，我們將討論組件故障的各種跡像以及如何解決與故障組件相關的問題。</span></p>
<p>Laptops and Notebooks 筆記本電腦</p>
<p id="N1068B" lang="">Laptops, netbooks, and notebooks are computers that are specifically designed for mobile use, unlike standard desktop workstations that remain stationary. The first laptops were created in the 1970s, but only for very specialized uses. Widespread adoption of laptop computers did not occur until the 1990s, but today they are in use everywhere. Originally, there were distinctions between laptops, notebooks, and netbooks, but in our discussions the terms will be used interchangeably. The distinctions between laptops, notebooks, and netbooks can most often be attributed to marketing, and many of those differences have morphed as the industry continues to evolve. Laptops and notebooks have essentially become a reference to fully equipped mobile computers with hardware and software availability similar to standard desktops using full-instruction set processors (x86 or x64). Most netbooks and tablets generally use embedded processors, such as arm-based RISC or similar. For example, an Alienware R-18 or an HP Elite series laptop runs a full operating system and can support any software designed for a desktop PC. Apple Macbook Pro and Air laptops also run desktop-equivalent, full operating systems. Classifications for a laptop might include desktop replacement, gaming rig, multimedia, or business class. Notebooks, as a subset of laptops, can be further classified as business class, ultrabook, or ultra-portable. Generally, the biggest differences between laptops and notebooks are the physical dimensions and weight.</p>
<p lang="">筆記本電腦，上網本和筆記本電腦是專門為移動用途而設計的計算機，與保持靜止的標準台式機工作站不同。第一台筆記本電腦創建於1970年代，但僅用於非常專業的用途。直到1990年代，筆記本電腦才被廣泛採用，但是今天它們在世界各地都得到了使用。最初，筆記本電腦，筆記本電腦和上網本之間存在區別，但是在我們的討論中，這些術語可以互換使用。筆記本電腦，筆記本電腦和上網本之間的區別通常可以歸因於市場營銷，並且隨著行業的不斷發展，這些差異中的許多差異都在變化。筆記本電腦和筆記本電腦實質上已成為具有硬件和軟件可用性的功能齊全的移動計算機的參考，類似於使用全指令集處理器（x86或x64）的標準台式機。大多數上網本和平板電腦通常使用嵌入式處理器，例如基於Arm的RISC或類似處理器。例如，Alienware R-18或HP Elite系列筆記本電腦運行完整的操作系統，並且可以支持為台式PC設計的任何軟件。 Apple Macbook Pro和Air筆記本電腦還運行與台式機等效的完整操作系統。筆記本電腦的分類可能包括台式機更換，遊戲機，多媒體或商務艙。作為筆記本電腦的子集，筆記本電腦可以進一步分為商務類，超極本或超便攜式。通常，筆記本電腦和筆記本電腦之間的最大區別是物理尺寸和重量。</p>
<p id="N1068E" lang="">While most laptops and notebooks may share similar processor design and software with their desktop counterparts, netbooks and tablets are quite different, because netbooks and tablets use ARM or MIPS RISC processors. In netbooks and tablets expandability is usually limited to an external USB port and micro-SD card reader. Netbook as a name is increasingly being replaced with "Chromebook", which is available from most major computer manufacturers. The OS and software available is limited and specialized for these processors. Current models include the Android and Windows RT operating systems. With the power of cloud computing and software as a service (SaaS), netbooks and tablets are more enticing for users because of their lower cost, lightweight nature, and longer battery life. We will discuss tablets separately as a “mobile device” in another module.</p>
<p lang="">雖然大多數筆記本電腦和筆記本電腦可能與台式機共享相似的處理器設計和軟件，但上網本和平板電腦卻大不相同，因為上網本和平板電腦使用ARM或MIPS RISC處理器。在上網本和平板電腦中，可擴展性通常僅限於外部USB端口和micro-SD讀卡器。上網本的名稱正越來越多地由大多數主要計算機製造商提供的“ Chromebook”代替。可用的OS和軟件受限制並且專門針對這些處理器。當前的模型包括Android和Windows RT操作系統。憑藉雲計算和軟件即服務（SaaS）的功能，上網本和平板電腦具有較低的成本，輕巧的特性和更長的電池壽命，因此對用戶更具吸引力。我們將在另一個模塊中將平板電腦作為“移動設備”進行單獨討論。</p>
<p id="N10691" lang="">Laptops are regular computers and are fully capable of completing all of the same functions as a desktop workstation. As stated above, the main difference is their portability and size. The main difference is their size: they are much smaller and more compact than a traditional workstation. For this reason, they are limited in their internal component replacement, upgrades, and expansion, and these upgrades are performed differently than in a traditional computer workstation. The main differences between laptops, notebooks, and netbooks are their size and the amount of processing power and capabilities they have. Laptops tend to have more internal storage, video capabilities, and processing power than the smaller netbooks. Because laptops and notebooks are smaller than their desktop counterparts, most laptops compromise on power to allow for mobility and smaller size. The compact size of these devices reduces their ability to provide cooling. Therefore, processing power is often sacrificed to minimize heat and maximize battery life.</p>
<p lang="">筆記本電腦是普通計算機，完全能夠完成與台式機工作站相同的所有功能。如上所述，主要區別在於它們的可移植性和大小。它們的主要區別在於它們的大小：它們比傳統的工作站小得多，而且更緊湊。因此，它們在內部組件更換，升級和擴展方面受到限制，並且這些升級的執行方式與傳統計算機工作站不同。筆記本電腦，筆記本電腦和上網本之間的主要區別在於它們的大小以及它們具有的處理能力和功能量。筆記本電腦往往比較小的上網本具有更多的內部存儲，視頻功能和處理能力。由於筆記本電腦和筆記本電腦的體積小於台式機，因此大多數筆記本電腦在功耗上都存在折衷，以實現移動性和更小的尺寸。這些設備的緊湊尺寸降低了它們提供冷卻的能力。因此，通常犧牲處理能力以最小化熱量並最大化電池壽命。</p>
<p id="N10694" lang="">In spite of these limitations for most laptops, most all manufacturers offer models with top of the line mobile processors, discrete graphics cards, improved cooling, and a comparable amount of RAM (currently up to 32 GB). With this kind of processing power and speed, laptops users may experience less than average battery life.</p>
<p lang="">儘管大多數筆記本電腦都有這些限制，但大多數所有製造商都提供配備頂級移動處理器，獨立顯卡，改進的散熱和相當數量的RAM（當前最高32 GB）的型號。通過這種處理能力和速度，筆記本電腦用戶可能會遇到比平均電池壽命短的情況。</p>
<p id="N10697" lang="">The most common type of memory used in laptop computers is the small outline dual in-line memory module (SODIMM). SODIMM is a good option for laptop computers, as it takes up a fraction of the space the dual in-line memory module (DIMM) of a typical desktop computer does.</p>
<p lang="" style="text-align: left;">便攜式計算機中最常用的內存類型是小型雙列直插式內存模塊（SODIMM）。 SODIMM對於便攜式計算機來說是一個不錯的選擇，因為它僅佔台式計算機雙列直插式內存模塊（DIMM）的一小部分。</p>
<p lang=""><img alt="Photograph of an open notebook computer sitting on top of an open laptop computer. The notebook computer is significantly smaller than the laptop computer." class="popimg" height="218" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image1.png" style="display: block; margin-left: auto; margin-right: auto;" title="Photograph of an open notebook computer sitting on top of an open laptop computer. The notebook computer is significantly smaller than the laptop computer." width="230"/></p>
<h3>PCH 17 Installing and Configuring Laptop Hardware</h3>
<p>PCH 17 安裝和配置筆記本電腦硬件</p>
<p>p123</p>
<p id="N10698" lang="">As a technician, you will be required to install and configure laptop hardware. PC laptop manufacturers publish specification manuals as well as a variety of service manuals online that can help you install and configure laptop hardware. Most include information from a complete system teardown to replacing a motherboard or CPU.</p>
<p lang="">作為技術人員，您將需要安裝和配置筆記本電腦硬件。 PC筆記本電腦製造商會在線發布規格手冊以及各種服務手冊，以幫助您安裝和配置筆記本電腦硬件。大多數信息包括從完整的系統拆卸到更換主板或CPU的信息。</p>
<p id="N1069B" lang="">Whenever you are working with laptop hardware, always check for the most complete up-to-date manual for anything more complicated than RAM, hard drives, or most wireless NIC cards. Also, always use safe handling and anti-static procedures when working on a computer.</p>
<p lang="">每當使用筆記本電腦硬件時，請始終檢查最完整的最新手冊，以查找除RAM，硬盤驅動器或大多數無線NIC卡之外的任何復雜信息。此外，在計算機上工作時，請始終使用安全的處理方法和防靜電程序。</p>
<div class="section" id="expansion">
<div class="sectionContain">
<p style="text-align: left;">Expansion 擴張</p>
<p id="N106A6" lang="" style="text-align: left;">The first method that was developed to expand a laptop’s capabilities was the Personal Computer Memory Card International Association (PCMCIA) card. These cards were inserted into an expansion slot on the slide of the laptop and fit almost completely inside the casing of the machine. These cards originally came as PC cards (16-bit or 32-bit) or CardBus (32-bit) cards that fit into the associated slot. These cards were hot-swappable, meaning that the card could be ejected or inserted while the computer was still powered on. The idea of these cards was to provide a standard expansion port, similar to a PCI expansion slot on a traditional desktop computer. These cards had 68 pins in a two-row connector. These cards came in three types: type I, type II, and type III. Type I was used to provide additional memory and storage capabilities, but is now obsolete. Type II was used to provide additional input/output connections (like FireWire or USB), a network interface card, modem, or other such external devices/connectivity. Type II cards were only 5 mm thick, so they usually had to include a dongle to convert a flat proprietary connection to a standard connection like FireWire, RJ-45, or RJ-11. Type III was used as an upgraded version of the type II device and was thicker, reaching 10.5 mm in size, reducing or eliminating the need for a dongle. Cardbus, an improvement to the PC card, was a full 32-bit expansion card system and operated very similarly to the PC card. The CardBus was easily identified by looking at the edge of the expansion card, since it contained a golden edge where the connectors were. The card in the first image below has a black edge, and is a PC card, not a CardBus.</p>
<p lang="" style="text-align: left;"><img alt="Photograph of a PC card sitting on top of a laptop computer. The card is silver with black edges. There is a label on the card with”Business Everywhere” typed on it." class="popimg" height="138" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image2.png" style="display: block; margin-left: auto; margin-right: auto;" title="Photograph of a PC card sitting on top of a laptop computer. The card is silver with black edges. There is a label on the card with”Business Everywhere” typed on it." width="184"/></p>
<p lang="" style="text-align: center;"><img alt="View of the end of a PC card on the left side of the image, which shows two rows of black plastic holes for pin connections, and a silver, rectangular base beneath the pin holes. On the right is the view from the end of a CardBus, which similarly has two rows of black plastic holes for pin connections, and a silver, rectangular base beneath the pin holes. Within the silver rectangular base is a smaller rectangle of gold-colored metal, with eight raised dots visible from the end-view." class="popimg" height="97" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image3.png" title="View of the end of a PC card on the left side of the image, which shows two rows of black plastic holes for pin connections, and a silver, rectangular base beneath the pin holes. On the right is the view from the end of a CardBus, which similarly has two rows of black plastic holes for pin connections, and a silver, rectangular base beneath the pin holes. Within the silver rectangular base is a smaller rectangle of gold-colored metal, with eight raised dots visible from the end-view." width="287"/></p>
<p lang="" style="text-align: left;"><img class="popimg" height="271" id="_i_4" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image4.png" style="display: block; margin-left: auto; margin-right: auto;" width="136"/></p>
<p lang="" style="text-align: left;">擴展筆記本電腦功能的第一種方法是國際個人計算機存儲卡協會（PCMCIA）卡。這些卡已插入筆記本電腦滑軌上的擴展槽中，幾乎完全可以裝入計算機機箱內。這些卡最初是作為可插入相關插槽的PC卡（16位或32位）或CardBus（32位）卡來的。這些卡是可熱插拔的，這意味著可以在計算機仍打開電源時彈出或插入卡。這些卡的想法是提供一個標準擴展端口，類似於傳統台式計算機上的PCI擴展插槽。這些卡在兩行連接器中有68個引腳。這些卡分為三種類型：I型，II型和III型。類型I用於提供其他內存和存儲功能，但現在已過時。類型II用於提供其他輸入/輸出連接（如FireWire或USB），網絡接口卡，調製解調器或其他此類外部設備/連接性。 II型卡只有5毫米厚，因此它們通常必須包含一個加密狗才能將扁平的專有連接轉換為FireWire，RJ-45或RJ-11等標準連接。 III型用作II型設備的升級版，它更厚，達到10.5毫米，從而減少或消除了對加密狗的需求。 Cardbus是PC卡的改進，它是一個完整的32位擴展卡系統，其操作與PC卡非常相似。通過查看擴展卡的邊緣可以輕鬆識別CardBus，因為它包含連接器所在的金色邊緣。下圖第一張圖中的卡具有黑色邊緣，是PC卡，而不是CardBus。</p>
<p lang="" style="text-align: left;">ExpressCard is a type of laptop expansion card that replaced PC cards and PCMCIA cards. Internally, the ExpressCard slots support both PCI Express and USB 2.0 connectivity and each card uses whichever standard to connect to the motherboard that the card designer believes is most appropriate for the card’s intended use. ExpressCard is hot-swappable, just like PC cards and PCMCIA cards. ExpressCard supports two form factors: the ExpressCard 34 (which is 34 mm wide) and ExpressCard 54 (which is 54 mm wide and shaped like an L). Regardless of which ExpressCard you are using, the connector inside the laptop is the same on both versions (34 mm), but the exterior portion can be either 34 mm or 54 mm. The ExpressCard slots are slightly shorter in length than a PCMCIA card, but are the same thickness at 5 mm. The ExpressCard 34 can fit in either an ExpressCard 34 slot or an ExpressCard 54 slot. The ExpressCard 54 can only fit into an ExpressCard 54 slot, though. As of 2016, it appears that all manufacturers have eliminated expansion cards in favor of eSata, USB, and Thunderbolt2 ports for laptop expandability. ExpressCards are still available in aftermarket sales, but the technology is soon to be deprecated as PCMCIA is now.</p>
<p lang=""><img alt="Photograph of a ExpressCard 34. The card is L-shaped. The longer rectangular portion is silver with a black edge. It has a label with “Lexar Professional ExpressCard” written on it. The shorter rectangular portion is black and has “Lexar” written on it. There is a rectangular protrusion with a label with”16GB … UDMA” written on it." class="popimg" height="134" id="_i_6" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image5.png" style="display: block; margin-left: auto; margin-right: auto;" title="Photograph of a ExpressCard 34. The card is L-shaped. The longer rectangular portion is silver with a black edge. It has a label with “Lexar Professional ExpressCard” written on it. The shorter rectangular portion is black and has “Lexar” written on it. There is a rectangular protrusion with a label with”16GB … UDMA” written on it." width="201"/></p>
<p lang=""><img class="popimg" height="135" id="_i_8" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image6.png" style="display: block; margin-left: auto; margin-right: auto;" width="257"/></p>
<p lang="" style="text-align: center;"><img class="popimg" height="193" id="_i_10" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image7.png" width="400"/></p>
<p lang="">ExpressCard是筆記本電腦擴展卡的一種，代替PC卡和PCMCIA卡。在內部，ExpressCard插槽同時支持PCI Express和USB 2.0連接，並且每個卡都使用卡設計者認為最適合卡預期用途的任何標準連接到主板。 ExpressCard可熱插拔，就像PC卡和PCMCIA卡一樣。 ExpressCard支持兩種尺寸：ExpressCard 34（寬度為34毫米）和ExpressCard 54（寬度為54毫米，形狀像L型）。無論使用哪種ExpressCard，筆記本電腦內部的連接器在兩個版本上都是相同的（34 mm），但是外部可以是34 mm或54 mm。 ExpressCard插槽的長度略短於PCMCIA卡，但厚度相同（5毫米）。 ExpressCard 34可以安裝在ExpressCard 34插槽或ExpressCard 54插槽中。但是，ExpressCard 54只能裝入ExpressCard 54插槽中。截至2016年，似乎所有製造商都已經淘汰了擴展卡，而採用eSata，USB和Thunderbolt2端口來實現筆記本電腦的可擴展性。 ExpressCard仍可在售後市場中購買，但是隨著PCMCIA的出現，該技術很快就會被棄用。</p>
</div>
</div>
<table height="65" style="width: 381.5px; margin-left: auto; margin-right: auto;">
<tbody>
<tr style="height: 13px;">
<td style="width: 110px; height: 13px; text-align: center;"><span>Version 1</span></td>
<td style="width: 107px; height: 13px; text-align: center;"><span>10 Gb/s</span></td>
<td style="width: 142.5px; height: 13px; text-align: center;"><span>DisplayPort 顯示端口</span></td>
</tr>
<tr style="height: 13px;">
<td style="width: 110px; height: 13px; text-align: center;"><span>Version 2</span></td>
<td style="width: 107px; height: 13px; text-align: center;"><span>20 Gb/s</span></td>
<td style="width: 142.5px; height: 13px; text-align: center;"><span>DisplayPort 顯示端口</span></td>
</tr>
<tr style="height: 13.25px;">
<td style="width: 110px; height: 13.25px; text-align: center;"><span>Version 3</span></td>
<td style="width: 107px; height: 13.25px; text-align: center;"><span>40 Gb/s</span></td>
<td style="width: 142.5px; height: 13.25px; text-align: center;"><span>USB Type C</span></td>
</tr>
</tbody>
</table>
<p><span>Watch the following video to explore more about laptop expansion:</span></p>
<p><span><a href="https://youtu.be/J1zZspEGTGM">https://youtu.be/J1zZspEGTGM</a></span></p>
<h3>PCH 17 Notebook Features</h3>
<p>PCH 17 筆記本功能</p>
<p>p124</p>
<p><span>Notebook keyboards have special function keys that do not exist on standard desktop keyboards. Notice that in the image below, you can see the special blue icons on the keyboard, especially on the arrow keys and function keys.</span></p>
<p><span>筆記本電腦鍵盤具有標準台式機鍵盤上不存在的特殊功能鍵。 請注意，在下圖中，您可以在鍵盤上看到特殊的藍色圖標，尤其是箭頭鍵和功能鍵上的圖標。</span></p>
<p style="text-align: center;"><span><img alt="Photograph of a laptop computer keyboard. The keys are black. The letters, numbers, and characters on the keys are white. Special function icons appear in blue on the number keys and arrow keys. Some letter keys also have special function icons." class="popimg" height="186" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image8.png" title="Photograph of a laptop computer keyboard. The keys are black. The letters, numbers, and characters on the keys are white. Special function icons appear in blue on the number keys and arrow keys. Some letter keys also have special function icons." width="284"/></span></p>
<p id="N106BD" lang="">By pressing the FN key in combination with the notebook specific keys (the blue keys in the image above) the user can access features such as increasing or decreasing screen brightness, toggling Wi-Fi and Bluetooth radios on and off, cycling through external monitor connections, adjusting the speaker volume, and other features depending on the specific laptop. Note in the image above that some of the letter and character keys have numbers written on them. That is because most laptops do not have room for a dedicated number pad and these keys provide that functionality when pressing the FN and NUM LOCK combination. If you are typing and notice numbers on the screen instead of letters, it may be the result of accidentally pressing that key sequence.</p>
<p lang="">通過同時按下FN鍵和筆記本專用鍵（上圖中的藍色鍵），用戶可以使用以下功能：增加或降低屏幕亮度，打開和關閉Wi-Fi和藍牙無線電，通過外部顯示器連接循環，調整揚聲器的音量以及其他功能，具體取決於特定的筆記本電腦。請注意，在上圖中，某些字母和字符鍵上面寫有數字。這是因為大多數筆記本電腦沒有足夠的空間容納專用數字鍵盤，並且在按FN和NUM LOCK組合鍵時這些鍵可提供該功能。如果您在屏幕上鍵入並註意數字而不是字母，則可能是由於不小心按下該鍵序列而導致的。</p>
<p id="N106C0" lang="">Another special feature of a laptop is the ability to connect an external monitor. Most desktop computers come standard with a single video output, whereas most laptops come with an external video port using HDMI, DisplayPort, DVI, or VGA. This allows you to duplicate, or extend, the internal display to the monitor to create a single continuous “larger” monitor. This is also advantageous when connecting a projector to the external port for presentations.</p>
<p lang="">筆記本電腦的另一個特殊功能是可以連接外部顯示器。大多數台式機標配單個視頻輸出，而大多數筆記本電腦均帶有使用HDMI，DisplayPort，DVI或VGA的外部視頻端口。這使您可以將內部顯示複製或擴展到監視器，以創建單個連續的“較大”監視器。將投影儀連接到外部端口進行演示時，這也是有利的。</p>
<p lang="">Laptop Displays 筆記本電腦顯示器</p>
<p id="N106F3" lang="">Unlike desktop computers, laptops have a built-in monitor. These displays cannot be upgraded or changed out for a “better model.” So, it is important that users select laptops that have displays they are happy with because it is one of the most important components from the user perspective. Over the years, manufacturers have used plasma and Light-Emitting Diode (LED) technology for displays, but display technology eventually converged on Liquid Crystal Display (LCD) backlit with LED. Plasma was one of the first display technologies used for laptops but was discarded in favor of the lighter LED and LCD. Organic Liquid Crystal Display (OLED) is expanding in the mobile telephone market and has recently started to become viable for laptop displays.</p>
<p lang="">與台式計算機不同，筆記本電腦具有內置顯示器。這些顯示器無法升級或更改為“更好的型號”。因此，重要的是用戶選擇具有他們滿意的顯示器的筆記本電腦，因為從用戶角度來看，它是最重要的組件之一。多年來，製造商已將等離子和發光二極管（LED）技術用於顯示器，但是顯示技術最終融合到了具有LED背光的液晶顯示器（LCD）上。等離子是最早用於筆記本電腦的顯示技術之一，但為了更輕便的LED和LCD而被丟棄。有機液晶顯示器（OLED）在移動電話市場中正在擴展，最近開始在筆記本電腦顯示器中變得可行。</p>
<p id="N106F6" lang="">Plasma displays were popular in early 1990s laptops when a 15- to 20-pound unit was acceptable. At that time, plasma only produced a black and white display. Plasma displays tend to weigh more than either LCD or LED, but offer better contrast ratios. In addition, plasma displays do not require backlighting. While plasma is not used in modern laptop displays (internally), it is used in a large number of televisions, which now can be connected through HDMI or DisplayPort as a secondary monitor.</p>
<p lang="">等離子顯示器在1990年代初的筆記本電腦中很受歡迎，當時可接受15至20磅的設備。那時，等離子僅產生黑白顯示。等離子顯示器的重量往往超過LCD或LED，但對比度更高。另外，等離子顯示器不需要背光。儘管等離子在現代筆記本電腦顯示器中（內部）不使用，但它在大量電視中使用，現在可以通過HDMI或DisplayPort將其連接為輔助顯示器。</p>
<p id="N106F9" lang="">The second technology used in laptop displays is the LED display, which is very similar to an LCD display. The main difference between LCD and LED display is the type of backlight used. LED displays use an LED bulb for the backlight, instead of cold compact fluorescent light (CCFL). The reason for this is that LED bulbs use less power than CCFLs, thereby increasing the battery life of the laptop during operations. LED displays tend to be thinner and initially lost ground in the laptop market to LCD displays with CCFL backlighting.</p>
<p lang="">筆記本電腦顯示器中使用的第二種技術是LED顯示器，它與LCD顯示器非常相似。 LCD和LED顯示屏之間的主要區別在於所使用的背光類型。 LED顯示器使用LED燈泡代替背光冷熒光燈（CCFL）。原因是LED燈泡比CCFL耗電少，從而延長了筆記本電腦在操作過程中的電池壽命。 LED顯示器趨於更薄，最初在筆記本電腦市場上被帶CCFL背光的LCD顯示器所取代。</p>
<p id="N106FC" lang="">LCDs utilize an active-matrix display with a transistor for every dot in the screen known as a pixel. Display technology uses pixel count measurements such as 640 (vertical pixels) x 480 (horizontal pixels); 800 x 600, or 1024 x 768; aspect ratios such as 4:3, 16:9, or 16:10; and lines of horizontal resolution such as 480p, 702i, and 1080p to name a few. Displays are measured diagonally, so a 17” laptop is the viewable area measured from corner to corner.</p>
<p lang="">LCD使用有源矩陣顯示器和一個晶體管，用於屏幕中每個點（稱為像素）。顯示技術使用像素計數測量，例如640（垂直像素）×480（水平像素）； 800 x 600或1024 x 768；長寬比，例如4：3、16：9或16:10；以及水平分辨率的線條，例如480p，702i和1080p等。顯示屏是對角線測量的，因此17英寸筆記本電腦是從一個角落到另一個角落的可見區域。</p>
<p id="N106FF" lang="">Current LCD display resolution can range from a tablet or a 2-in-1, which might be 1366 x 768, to Ultrabook with 1920 x 1080 full HD, or business class and gaming rigs that can provide Ultra HD resolutions with a still higher pixel count. In a standard display with a resolution of 1920 x 1080, there are more than one million transistors used to provide the image on the screen. Originally, LCDs used a CCFL backlight to illuminate the transistors and provide the image on the screen. If the backlight fails, the laptop will not display an image and the CCFL will need to be replaced. This is not very common, though, because CCFL bulbs usually last for 50,000 hours of usage.</p>
<p lang="">當前的LCD顯示分辨率範圍從平板電腦或2合1（可能是1366 x 768）到具有1920 x 1080全高清的Ultrabook，或者可以提供更高像素的超高清分辨率的商務和遊戲設備計數。在分辨率為1920 x 1080的標準顯示器中，有超過一百萬個晶體管用於在屏幕上提供圖像。最初，LCD使用CCFL背光來照亮晶體管並在屏幕上提供圖像。如果背光燈失效，則筆記本電腦將不會顯示圖像，並且需要更換CCFL。但是，這不是很常見，因為CCFL燈泡通常可持續使用50,000小時。</p>
<p id="N10702" lang="">Laptops run on direct current (DC) power from the battery or the power adapter. LCD CCFL laptop displays, though, require alternating current (AC) to power their backlights. The inverter in a laptop performs this conversion function from low-voltage DC to high-voltage AC. If the inverter fails, which was a common problem, a technician is required to replace this part. Luckily, these inverters are not too costly and can be replaced by a technician without too much difficulty. In the image below, you can see the typical location of a laptop’s inverter in the bevel of the laptop display.</p>
<p lang="" style="text-align: left;">筆記本電腦依靠電池或電源適配器的直流（DC）電源運行。但是，LCD CCFL筆記本電腦顯示器需要交流電（AC）為背光燈供電。筆記本電腦中的逆變器執行從低壓DC到高壓AC的轉換功能。如果逆變器出現故障（這是常見問題），則需要技術人員更換該部件。幸運的是，這些逆變器並不太昂貴，可以很容易地由技術人員更換。在下圖中，您可以在筆記本電腦顯示屏的斜角中看到筆記本電腦逆變器的典型位置。</p>
<p lang="" style="text-align: center;"><img alt="Photograph of a display removed from the laptop. There is a red line with an arrow drawn on the photo pointing to the bevel of the display where it joins the laptop. The red line and arrow is labeled “inverter.”" class="popimg" height="236" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image9.png" title="Photograph of a display removed from the laptop. There is a red line with an arrow drawn on the photo pointing to the bevel of the display where it joins the laptop. The red line and arrow is labeled “inverter.”" width="252"/></p>
<p lang="">Although using the CCFL provides a higher quality and more consistent image, laptop manufacturers for the most part have achieved similar quality with HD resolutions using an LED backlit LCD display. Effectively lighter and less power consuming, this is the current trend for most laptops on the market. With the continuing development of HD, QHD, and UHD resolutions in the television display market, laptop manufacturers are incorporating these features into higher end gaming and professional media systems. The table below is indicative of some common resolutions by native resolution and corresponding standard:</p>
<p lang="">儘管使用CCFL可以提供更高的質量和更一致的圖像，但是筆記本電腦製造商在大多數情況下已經通過使用LED背光LCD顯示屏獲得了高清分辨率的相似質量。 有效地減輕重量和減少功耗，這是市場上大多數筆記本電腦的當前趨勢。 隨著電視顯示市場中HD，QHD和UHD分辨率的不斷發展，筆記本電腦製造商正在將這些功能集成到高端遊戲和專業媒體系統中。 下表通過原始分辨率和相應的標準指示了一些常見的分辨率：</p>
<table height="288" style="width: 545px; margin-left: auto; margin-right: auto;">
<tbody>
<tr style="height: 61px;">
<td style="width: 172px; text-align: center; height: 61px;">
<p style="text-align: center;">Pixel RatioNative Resolution</p>
<p style="text-align: center;">像素比率原生分辨率</p>
</td>
<td style="width: 144px; text-align: center; height: 61px;">
<p>Aspect Ratio</p>
<div class="tlid-input input">
<div class="source-wrap">
<div class="input-full-height-wrapper tlid-input-full-height-wrapper">
<div class="source-input">
<div class="source-footer-wrap source-or-target-footer">
<div class="character-count tlid-character-count">
<div class="cc-ctr normal">長寬比</div>
</div>
</div>
</div>
</div>
</div>
</div>
</td>
<td style="width: 207px; text-align: center; height: 61px;">
<p>Standard &amp;Resolution</p>
<div class="tlid-input input">
<div class="source-wrap">
<div class="input-full-height-wrapper tlid-input-full-height-wrapper">
<div class="source-input">
<div class="source-footer-wrap source-or-target-footer">
<div class="source-footer">
<div class="speech-wrap source-or-target-footer-button left-positioned">
<div aria-disabled="true" aria-label="請選擇一種要啟用語音輸入的特定語言" aria-pressed="false" class="speech-button goog-toolbar-button goog-toolbar-button-disabled" data-tooltip="請選擇一種要啟用語音輸入的特定語言" data-tooltip-align="t,c" id="gt-speech" role="button"><span class="jfk-button-img"></span>標準與分辨率</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</td>
</tr>
<tr style="height: 25px; text-align: center;">
<td style="width: 172px; text-align: center; height: 25px;">640×480</td>
<td style="width: 144px; text-align: center; height: 25px;">4:3</td>
<td style="width: 207px; text-align: center; height: 25px;">VGA</td>
</tr>
<tr style="height: 25.9688px; text-align: center;">
<td style="width: 172px; text-align: center; height: 25.9688px;">1280x 720</td>
<td style="width: 144px; text-align: center; height: 25.9688px;">16:9</td>
<td style="width: 207px; text-align: center; height: 25.9688px;">WXGA (720p equivalent)</td>
</tr>
<tr style="height: 25px; text-align: center;">
<td style="width: 172px; text-align: center; height: 25px;">1366×786</td>
<td style="width: 144px; text-align: center; height: 25px;">16:9</td>
<td style="width: 207px; text-align: center; height: 25px;">HD</td>
</tr>
<tr style="height: 25px; text-align: center;">
<td style="width: 172px; text-align: center; height: 25px;">1680×1050</td>
<td style="width: 144px; text-align: center; height: 25px;">8:5</td>
<td style="width: 207px; text-align: center; height: 25px;">WSXGA</td>
</tr>
<tr style="height: 25px; text-align: center;">
<td style="width: 172px; text-align: center; height: 25px;">1920×1080</td>
<td style="width: 144px; text-align: center; height: 25px;">16:9</td>
<td style="width: 207px; text-align: center; height: 25px;">FHD (1080p equivalent)</td>
</tr>
<tr style="height: 25px; text-align: center;">
<td style="width: 172px; text-align: center; height: 25px;">1920×1200</td>
<td style="width: 144px; text-align: center; height: 25px;">16:10</td>
<td style="width: 207px; text-align: center; height: 25px;">WUXGA</td>
</tr>
<tr style="height: 25px; text-align: center;">
<td style="width: 172px; text-align: center; height: 25px;">2560x 1440</td>
<td style="width: 144px; text-align: center; height: 25px;">16:9</td>
<td style="width: 207px; text-align: center; height: 25px;">QHD</td>
</tr>
<tr style="height: 26px; text-align: center;">
<td style="width: 172px; text-align: center; height: 26px;">2560x 1600</td>
<td style="width: 144px; text-align: center; height: 26px;">16:10</td>
<td style="width: 207px; text-align: center; height: 26px;">WQXGA</td>
</tr>
<tr style="height: 26px;">
<td style="width: 172px; text-align: center; height: 26px;">3840x 2160</td>
<td style="width: 144px; text-align: center; height: 26px;">16:9</td>
<td style="width: 207px; text-align: center; height: 26px;">4K UHD</td>
</tr>
</tbody>
</table>
<p id="N107D1" lang="">Every LCD and LED display is built with a native resolution. This means that every display has an optimal display quality that can be achieved only when the signal input matches the native resolution. If the laptop display has a native resolution of 1920 x 1080 (1080p), then every other resolution that the laptop display uses is either scaled up (stretched) or scaled down (shrunk). This affects the display of all the elements on the laptops including video, images, and desktop elements.</p>
<p lang="">每個LCD和LED顯示屏均具有本機分辨率。這意味著只有在信號輸入與原始分辨率匹配時，才能實現每個顯示器的最佳顯示質量。如果便攜式計算機顯示器的原始分辨率為1920 x 1080（1080p），則便攜式計算機顯示器使用的所有其他分辨率將按比例放大（拉伸）或按比例縮小（縮小）。這會影響筆記本電腦上所有元素的顯示，包括視頻，圖像和桌面元素。</p>
<p id="N107D4" lang="">When choosing a laptop, ensuring the display meets your needs is important. The two types of LCDs available are Twisted Nematic (TN) and In-Plane Switching (IPS). The type of LCD controls the viewing angle, ghosting, response time, and native resolution. Generally, a manufacture offers one or the other in a product line, so knowing your usage patterns helps to inform decisions when purchasing a laptop. Replacing a laptop display requires the technician to order the precise replacement type from either the manufacturer or a third-party seller as the replacement must match the original.</p>
<p lang="">選擇筆記本電腦時，確保顯示屏滿足您的需求非常重要。可用的兩種LCD類型為扭曲向列（TN）和平面內切換（IPS）。 LCD的類型控制視角，重像，響應時間和原始分辨率。通常，製造商在產品線中提供一個或另一個，因此了解您的使用方式有助於在購買筆記本電腦時做出決定。更換筆記本電腦顯示器時，技術人員必須從製造商或第三方銷售商處訂購精確的更換類型，因為更換的物品必須與原始物品匹配。</p>
<p id="N107D7" lang="">TN LCDs have a tendency to be less expensive and have faster response times than IPS LCDs. They also have a smaller viewing angle than IPS LCDs so they work well for the laptop environment where the user is typically located directly in front of the machine. The viewing angle is a measure of the amount of the display that can be seen adequately at a certain degree from the center of the screen. A wide viewing angle may be a privacy concern for some, while it could be considered a benefit by others. Many laptops now boast a viewing angle of up to 170 degrees, providing maximum flexibility in their displays.</p>
<p lang="">TN LCD具有比IPS LCD更便宜，響應時間更快的趨勢。與IPS LCD相比，它們的視角也更小，因此它們可以很好地在通常用戶直接位於機器正面的筆記本電腦環境中使用。視角是可以從屏幕中心以一定程度充分看到的顯示量的度量。對於某些人來說，寬視角可能是一個隱私問題，而對於其他人則可以考慮。現在，許多筆記本電腦擁有高達170度的可視角度，在其顯示屏中提供最大的靈活性。</p>
<p id="N107DA" lang="">TN LCDs also have a faster response time, which is how fast the pixels move from state to state (black to white or grey to grey). Response times are measured in milliseconds (ms) with TN coming in between 1-2ms and IPS between 3-5ms. The color variations are tied to the input and output commands as translated to the display. For uses such as gaming and video editing, TN is generally preferred over IPS.</p>
<p lang="">TN LCD的響應時間也更快，這就是像素從狀態到狀態（黑色到白色或灰色到灰色）移動的速度。響應時間以毫秒（ms）為單位，TN在1-2ms之間，IPS在3-5ms之間。顏色變化與翻譯成顯示屏的輸入和輸出命令有關。對於遊戲和視頻編輯等用途，TN通常比IPS更可取。</p>
<p id="N107DD" lang="">In spite of the advantage between cost and response times, manufacturers will often use IPS in business class machines and higher end gaming laptops because of better color reproduction and viewing angle. An IPS display combined with a higher quality graphics card can make up for slightly slower response times.</p>
<p lang="">儘管成本和響應時間之間有優勢，但製造商仍會在商務級機器和高端遊戲筆記本電腦中使用IPS，因為它們具有更好的色彩還原和視角。 IPS顯示屏與更高質量的圖形卡相結合可以彌補響應速度稍慢的問題。</p>
<p id="N107E0" lang="">Other considerations in choosing a display are contrast ratio–the measure of the difference between the lightest and darkest portions of the display–and brightness, which is the overall measure of lightness or darkness.</p>
<p lang="">選擇顯示器時，還需要考慮其他因素，例如對比度（顯示器最亮和最暗部分之間的差異的量度）和亮度，即衡量明暗程度的整體指標。</p>
<p id="N107E3" lang="">The last option for laptop displays is the newest technology–organic LED (OLED)–which uses organic compounds between electrodes to emit light instead of an LCD or LED bulb. These are still not widely used in the laptop market but as the technology becomes more common in the cellular telephone market, it is driving changes in the laptop market. OLED provides a superb color depth and much better contrast ratio than traditional LCD/LED displays but their cost is still prohibitive in modern laptops. As of early 2016, four manufacturers have slated a spring release of OLED laptops.</p>
<p lang="">筆記本電腦顯示器的最後一個選擇是最新技術-有機LED（OLED），該技術在電極之間使用有機化合物發光而不是LCD或LED燈泡。這些技術尚未在筆記本電腦市場中得到廣泛使用，但是隨著該技術在蜂窩電話市場中變得越來越普遍，它推動了筆記本電腦市場的變化。與傳統的LCD / LED顯示器相比，OLED提供了出色的色彩深度和更好的對比度，但在現代筆記本電腦中，其成本仍然高昂。截至2016年初，四家製造商已計劃在春季發布OLED筆記本電腦。</p>
<p id="N107E6" lang="">The last item for consideration is completely unrelated to the display itself but is a function of the display being the tallest element on the laptop. Due to this fact the WLAN antennae are routed up onto the top of the display under the bezel. Care must be taken when repairing displays and removing the bezel so as to not harm the antennae. This is especially important since the incorporation of Wireless-n NIC cards in laptops.</p>
<p lang="">需要考慮的最後一項與顯示器本身完全無關，但取決於顯示器是筆記本電腦中最高的元素。由於這個事實，WLAN天線被路由到邊框下方顯示器的頂部。修理顯示器和卸下擋板時必須小心，以免損壞天線。這是非常重要的，因為在筆記本電腦中集成了Wireless-n NIC卡。</p>
<p lang=""><a href="https://youtu.be/79r5rxS276Y">https://youtu.be/79r5rxS276Y</a></p>
<p>Device Replacement 設備更換</p>
<p id="N1087C" lang="">Unlike desktop computers, laptops tend to use proprietary parts, because each manufacturer makes the internal layout and design of their laptop to meet their own design specifications. For this reason, you cannot simply replace a display or keyboard on one laptop with parts from a different model laptop. System boards, network cards, touch pads, and other devices all must be purchased from the original manufacturer, because an aftermarket component won’t necessarily fit in your model. Luckily, a few parts are still standard across all laptops, including hard drives, some ODD (CD/DVD), memory, and CPUs. Note, though, that it is often cheaper to replace a laptop than it is to replace the laptop’s parts. For example, if you have a two-year-old laptop and the display gets cracked, it may be more cost effective to simply buy a newer laptop than to replace the display, because the display may cost several hundred dollars to replace.</p>
<p lang="">與台式計算機不同，筆記本電腦傾向於使用專有零件，因為每個製造商都會對其筆記本電腦進行內部佈局和設計，以符合自己的設計規範。因此，您不能簡單地用其他型號筆記本電腦中的部件替換一台筆記本電腦上的顯示器或鍵盤。系統板，網卡，觸摸板和其他設備都必須從原始製造商處購買，因為售後組件不一定適合您的型號。幸運的是，所有筆記本電腦中仍然有一些部件是標準部件，包括硬盤驅動器，某些ODD（CD / DVD），內存和CPU。不過請注意，更換筆記本電腦通常比更換筆記本電腦的零件便宜。例如，如果您有一台使用了兩年的筆記本電腦，並且顯示屏破裂了，那麼簡單地購買一台較新的筆記本電腦要比更換顯示屏更具成本效益，因為更換顯示屏可能要花費數百美元。</p>
<p id="N1087F" lang="">Laptops have two different power sources: power from the wall via the AC adapter and power from the battery. The battery is often replaceable or upgradable by the end user, and can be purchased through numerous third-party websites. The same holds true of the AC adapter. You must be careful to ensure that the wattage and voltage output match as some third-party devices are made with inferior quality, and a mismatch can actually damage your laptop.</p>
<p>筆記本電腦有兩種不同的電源：通過交流適配器從牆上供電和從電池供電。最終用戶通常可以更換或升級電池，並且可以通過眾多第三方網站購買電池。 AC適配器也是如此。您必須小心確保功率和電壓輸出匹配，因為某些第三方設備的製造質量較差，並且不匹配實際上會損壞您的筆記本電腦。</p>
<p style="text-align: center;"><img alt="Photograph of the internal components of a laptop. The components are arranged on a board, and are not identified." class="popimg" height="150" id="_i_5" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH17/webcontent/PCH17/image10.png" title="Photograph of the internal components of a laptop. The components are arranged on a board, and are not identified." width="225"/></p>
<h1>Kaggle python</h1>
<p><img alt="" height="515" src="/images/Kaggle python.PNG" width="715"/></p>
<p><a href="https://www.kaggle.com/xiaowoo/cp2020w8">https://www.kaggle.com/xiaowoo/cp2020w8</a></p>
<h1>HW2</h1>
<h2>HW2-1</h2>
<p><a href="https://www.kaggle.com/xiaowoo/cp2020-hw2">https://www.kaggle.com/xiaowoo/cp2020-hw2</a></p>
<p>1b-test.py-SciTE</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_258757">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">import</code> <code class="py plain">urllib.request</code></div>
<div class="line number2 index1 alt1"><code class="py comments">#導入urllib.request</code></div>
<div class="line number3 index2 alt2"><code class="py plain">target_url </code><code class="py keyword">=</code> <code class="py string">"https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776"</code></div>
<div class="line number4 index3 alt1"><code class="py comments">#設target_url = "網址"</code></div>
<div class="line number5 index4 alt2"><code class="py plain">cp1b </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number6 index5 alt1"><code class="py comments">#設cp1b=數列</code></div>
<div class="line number7 index6 alt2"><code class="py keyword">for</code> <code class="py plain">line </code><code class="py keyword">in</code> <code class="py plain">urllib.request.urlopen(target_url):</code></div>
<div class="line number8 index7 alt1"><code class="py comments">#重複打開target_url的迴圈定義line</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py plain">cp1b.append(</code><code class="py functions">int</code><code class="py plain">(line.decode(</code><code class="py string">'utf-8'</code><code class="py plain">).rstrip()))</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py comments">#把line重新編碼加進cp1b(數列)   註:rstrip()刪除字尾符號</code></div>
<div class="line number11 index10 alt2"><code class="py functions">print</code><code class="py plain">(cp1b)</code></div>
<div class="line number12 index11 alt1"><code class="py comments">#印出cp1b</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p>成果:</p>
</div>
</div>
<p><img alt="" height="221" src="/images/HW2-1.PNG" width="828"/>備註:</p>
<p>for迴圈下一段要空格</p>
<p>                       by 40823152</p>
<h2>HW2-2</h2>
<h2>HW2-3</h2>
<h1>HW3</h1>
<h2>HW3-6</h2>
<p><a href="https://www.kaggle.com/xiaowoo/cp2020-hw3-6/edit">https://www.kaggle.com/xiaowoo/cp2020-hw3-6/edit</a></p>
<p><img alt="" height="686" src="/images/HW3-6.PNG" width="986"/></p>
<p></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_227897">
<table border="0" cellpadding="0" cellspacing="0" style="width: 211px;">
<tbody>
<tr>
<td class="gutter" style="width: 19px;">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number12 index11 alt1">13</div>
<div class="line number12 index11 alt1">14</div>
<div class="line number12 index11 alt1">15</div>
<div class="line number12 index11 alt1">16</div>
<div class="line number12 index11 alt1">17</div>
</td>
<td class="code" style="width: 186px;">
<div class="container">
<div class="line number1 index0 alt2">
<p>def reverse(word):<br/>x = ''<br/>for i in range(len(word)):<br/>x += word[len(word)-1-i]<br/>return x</p>
<p>word = input('give me a word:\n')<br/>x = reverse(word)<br/>if x == word:<br/>print('This is a Palindrome')<br/>else:<br/>print('This is NOT a Palindrome')</p>
</div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p>def reverse(word):<br/>x = ''<br/>for i in range(len(word)):<br/>x += word[len(word)-1-i]<br/>return x</p>
<p>word = input('give me a word:\n')<br/>x = reverse(word)<br/>if x == word:<br/>print('This is a Palindrome')<br/>else:<br/>print('This is NOT a Palindrome')</p>
<h3>Exercise</h3>
<p>String Lists<span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/> 字串清單</p>
<p><i>strings lists index </i>字符串列表索引<br/><br/></p>
<p>Exercise 6 (and<span> </span><a href="https://www.practicepython.org/solution/2014/03/19/06-string-lists-solutions.html">Solution</a>) 練習6（和解決方案）</p>
<p>Ask the user for a string and print out whether this string is a palindrome or not. (A<span> </span><strong>palindrome</strong><span> </span>is a string that reads the same forwards and backwards.)</p>
<p>向用戶詢問一個字符串，然後打印出該字符串是否是回文。 （回文是指向前和向後讀取相同字符串的字符串。）</p>
<p></p>
<p>Discussion 討論區</p>
<p>Concepts for this week: 本週的概念</p>
<ul>
<li>List indexing 列表索引</li>
<li>Strings are lists 字符串是列表</li>
</ul>
<p></p>
<p>List indexing 列表索引</p>
<p>In Python (and most programming in general), you start counting lists from the number 0. The first element in a list is “number 0”, the second is “number 1”, etc.</p>
<p>在Python（以及大多數通用編程）中，您從數字0開始計數列表。列表中的第一個元素是“數字0”，第二個元素是“數字1”，依此類推。</p>
<p>As a result, when you want to get single elements out of a list, you can ask a list for that number element:</p>
<p>結果，當您要從列表中刪除單個元素時，可以向列表中請求該number元素：</p>
<pre><code class="language-pycon" data-lang="pycon">  &gt;&gt;&gt; a = [5, 10, 15, 20, 25]
  &gt;&gt;&gt; a[3]
  20
  &gt;&gt;&gt; a[0]
  5</code></pre>
<p>There is also a convenient way to get sublists between two indices:</p>
<p>還有一種便捷的方法來獲取兩個索引之間的子列表：</p>
<pre><code class="language-pycon" data-lang="pycon">  &gt;&gt;&gt; a = [5, 10, 15, 20, 25, 30, 35, 40]
  &gt;&gt;&gt; a[1:4]
  [10, 15, 20]
  &gt;&gt;&gt; a[6:]
  [35, 40]
  &gt;&gt;&gt; a[:-1]
  [5, 10, 15, 20, 25, 30, 35]</code></pre>
<p>The first number is the “start index” and the last number is the “end index.”</p>
<p>第一個數字是“開始索引”，最後一個數字是“結束索引”。</p>
<p>You can also include a third number in the indexing, to count how often you should read from the list:</p>
<p>您還可以在索引中包含第三個數字，以計算應該從列表中讀取的頻率：</p>
<pre><code class="language-pycon" data-lang="pycon">  &gt;&gt;&gt; a = [5, 10, 15, 20, 25, 30, 35, 40]
  &gt;&gt;&gt; a[1:5:2]
  [10, 20]
  &gt;&gt;&gt; a[3:0:-1]
  [15, 10, 5]</code></pre>
<p>To read the whole list, just use the variable name (in the above examples,<span> </span><code class="highlighter-rouge">a</code>), or you can also use<span> </span><code class="highlighter-rouge">[:]</code><span> </span>at the end of the variable name (in the above examples,<span> </span><code class="highlighter-rouge">a[:]</code>).</p>
<p>要讀取整個列表，只需使用變量名（在上面的示例中，a），或者也可以在變量名的末尾使用[：]（在上面的示例中，a [：]）。</p>
<p>Strings are lists 字符串是列表</p>
<p>Because strings are lists, you can do to strings everything that you do to lists. You can iterate through them:</p>
<p>因為字符串是列表，所以您可以將對列表所做的所有操作都字符串化。您可以遍歷它們：</p>
<pre><code class="language-python" data-lang="python">  <span class="n">string</span> <span class="o">=</span> <span class="s">"example"</span>
  <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span> 
    <span class="k">print</span> <span class="s">"one letter: "</span> <span class="o">+</span> <span class="n">c</span></code></pre>
<p>Will give the result:</p>
<p>將給出結果：</p>
<pre><code class="language-pycon" data-lang="pycon">  one letter: e
  one letter: x
  one letter: a
  one letter: m
  one letter: p
  one letter: l
  one letter: e</code></pre>
<p>You can take sublists:</p>
<p>您可以列出子列表：</p>
<pre><code class="language-pycon" data-lang="pycon">  &gt;&gt;&gt; string = "example"
  &gt;&gt;&gt; s = string[0:5]
  &gt;&gt;&gt; print s
  examp</code></pre>
<p>Now<span> </span><code class="highlighter-rouge">s</code><span> </span>has the string “examp” in it.</p>
<p>現在s中有字符串“ examp”。</p>
<p>Moral of the story: a string is a list.</p>
<p>故事的寓意：字符串是一個列表。</p>
<p>Happy coding!</p>
<p>祝您編碼愉快！</p>
<h2>HW3-30</h2>
<p></p>
<h3>Exercise</h3>
<p>Pick Word<span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/> 選擇單詞</p>
<p>Exercise 30 (and<span> </span><a href="https://www.practicepython.org/solution/2016/10/15/30-pick-word-solutions.html">Solution</a>) 練習30（和解決方案）</p>
<p><em>This exercise is Part 1 of 3 of the Hangman exercise series. The other exercises are:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html">Part 2</a><span> </span>and<span> </span><a href="https://www.practicepython.org/exercise/2017/01/10/32-hangman.html">Part 3</a>.</em></p>
<p><em>本練習是《 Hangman》練習系列3的第1部分。其他練習是：第2部分和第3部分。</em></p>
<p>In this exercise, the task is to write a function that picks a random word from a list of words from the<span> </span><a href="http://norvig.com/ngrams/sowpods.txt">SOWPODS dictionary</a>. Download this file and save it in the same directory as your Python code. This file is<span> </span><a href="https://en.wikipedia.org/wiki/Peter_Norvig">Peter Norvig</a>’s compilation of the dictionary of words used in professional Scrabble tournaments. Each line in the file contains a single word.</p>
<p>在本練習中，任務是編寫一個函數，該函數從SOWPODS詞典的單詞列表中選擇一個隨機單詞。下載此文件並將其保存在與Python代碼相同的目錄中。此文件是Peter Norvig對專業Scrabble錦標賽中使用的單詞詞典的彙編。文件中的每一行都包含一個單詞。</p>
<p><em>Hint: use the Python<span> </span><code class="highlighter-rouge">random</code><span> </span>library for picking a random word.</em></p>
<p><em>提示：使用Python隨機庫選擇一個隨機詞。</em></p>
<p>Aside: what is SOWPODS</p>
<p>撇開：什麼是SOWPODS</p>
<p>SOWPODS is a word list commonly used in word puzzles and games (like Scrabble for example). It is the combination of the Scrabble Player’s Dictionary and the Chamber’s Dictionary. (The history of SOWPODS is quite interesting, I highly recommend reading the<span> </span><a href="https://en.wikipedia.org/wiki/SOWPODS">Wikipedia article if you are curious</a>.)</p>
<p>SOWPODS是單詞拼圖和遊戲中常用的單詞列表（例如，Scrabble）。它是Scrabble Player詞典和Chamber詞典的組合。 （SOWPODS的歷史非常有趣，如果您感到好奇，我強烈建議閱讀Wikipedia文章。）</p>
<p>Previous exercises with similar concepts</p>
<p>以前的類似概念練習</p>
<p>In previous exercises, we have covered all the necessary skills needed to complete this exercise. Check out:</p>
<p>在以前的練習中，我們介紹了完成此練習所需的所有必要技能。查看：</p>
<ol>
<li><a href="https://www.practicepython.org/exercise/2014/12/06/22-read-from-file.html">Exercise 22: read from a file</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/> 練習22：讀取文件</li>
<li><a href="https://www.practicepython.org/exercise/2014/04/02/09-guessing-game-one.html">Exercise 9: generating a random number</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/> 練習9：生成一個隨機數</li>
<li><a href="https://www.practicepython.org/exercise/2014/02/15/03-list-less-than-ten.html">Exercise 3: accessing an element of a list</a><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/> 練習3：訪問列表的元素</li>
</ol>
<p>Brief concept review 簡要概念回顧</p>
<p>Reading a file 讀取文件</p>
<p>The Python way of reading a file from disk is to use the<span> </span><code class="highlighter-rouge">with</code><span> </span>construction together with a<span> </span><code class="highlighter-rouge">while</code><span> </span>loop:</p>
<p>從磁盤讀取文件的Python方法是將with結構與while循環一起使用：</p>
<pre><code class="language-python" data-lang="python"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'filename.txt'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:         使用open（'filename.txt'，'r'）作為f：</span>
  <span class="n">line</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()                        行= f.readline（）</span>
  <span class="k">while</span> <span class="n">line</span><span class="p">:                                而線：</span>
    <span class="c"># do something to the line, for example  ＃例如，對行執行操作</span>
    <span class="c"># saving it to disk                      ＃將其保存到磁盤</span>
    <span class="n">line</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()                      行= f.readline（）</span>

<span class="k">print</span><span class="p">(</span><span class="s">"The entire file as been read!"</span><span class="p">)<br/></span></code></pre>
<p>打印（“已讀取整個文件！”）</p>
<p>The file<span> </span><code class="highlighter-rouge">filename.txt</code><span> </span>should be in the same directory as your Python script.</p>
<p>文件filename.txt應與Python腳本位於同一目錄中。</p>
<p>The idea behind the<span> </span><code class="highlighter-rouge">with</code><span> </span>construction is that it isolates any variables defined in the<span> </span><code class="highlighter-rouge">with</code><span> </span>line from the rest of your code. When you are dealing with files, this means properly opening and closing the files. The<span> </span><code class="highlighter-rouge">open</code><span> </span>line in the<span> </span><code class="highlighter-rouge">with</code><span> </span>statement actually does the opening of the file and saves the file object in the variable<span> </span><code class="highlighter-rouge">f</code>. The<span> </span><code class="highlighter-rouge">'r'</code><span> </span>passed into the<span> </span><code class="highlighter-rouge">open()</code><span> </span>function tells Python “open the file for reading”. If the<span> </span><code class="highlighter-rouge">'w'</code><span> </span>argument is passed instead, Python will interpret this as “open the file and allow writing to it.”</p>
<p>with構造背後的想法是，它將with行中定義的所有變量與其餘代碼隔離開來。在處理文件時，這意味著正確打開和關閉文件。 with語句中的打開行實際上是在打開文件，並將文件對象保存在變量f中。傳遞給open（）函數的'r'告訴Python“打開文件進行讀取”。如果改為傳遞“ w”參數，Python會將其解釋為“打開文件並允許對其進行寫入”。</p>
<p>After all the code inside the<span> </span><code class="highlighter-rouge">with</code><span> </span>block is finished, the file<span> </span><code class="highlighter-rouge">f</code><span> </span>is properly closed by Python. So by the time the program starts executing the<span> </span><code class="highlighter-rouge">print</code><span> </span>statement, the file is already closed.</p>
<p>在with塊中的所有代碼完成之後，文件f被Python正確關閉。因此，當程序開始執行print語句時，該文件已經關閉。</p>
<p>One thing to remember when reading lines from a file in this way is that a line contains a<span> </span><code class="highlighter-rouge">\n</code>, or a newline character at the end. So before processing the line, it is usually a good idea to use<span> </span><code class="highlighter-rouge">.strip()</code><span> </span>to remove the newlines and spaces from the start and end of the lines, like so:</p>
<p>以這種方式從文件中讀取行時要記住的一件事是，行的末尾包含\ n或換行符。因此，在處理行之前，通常最好使用.strip（）從行的開頭和結尾刪除換行符和空格，如下所示：</p>
<pre><code class="language-python" data-lang="python"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'filename.txt'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:         使用open（'filename.txt'，'r'）作為f：</span>
  <span class="n">line</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()                行= f.readline（）。strip（）</span>
  <span class="k">while</span> <span class="n">line</span><span class="p">:                                而線：</span>
    <span class="c"># do something with the 'line' variable  ＃用'line'變量做點什麼</span>
    <span class="n">line</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()              行= f.readline（）。strip（）</span></code></pre>
<p>There are many ways of reading lines from files. If for example you want to read all the lines of the file into a list, you can use the following variant:</p>
<p>有許多方法可以從文件中讀取行。例如，如果要將文件的所有行都讀入列表，則可以使用以下變體：</p>
<pre><code class="language-python" data-lang="python"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'filename.txt'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:  </span></code><code class="language-python" data-lang="python"><span class="p">使用open（'filename.txt'，'r'）作為f：</span></code></pre>
<pre><code class="language-python" data-lang="python"><span class="p"></span> <span class="n">lines</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readlines</span><span class="p">()                </span></code><code class="language-python" data-lang="python"><span class="p">行= f.readline（）。strip（）</span></code></pre>
<p>At the end of this code, the variable<span> </span><code class="highlighter-rouge">lines</code><span> </span>will have all the elements from the file in a Python list.</p>
<p>在此代碼的結尾，變量行將在Python列表中包含文件中的所有元素。</p>
<p>Here are a few references about opening files, if you would like to read more:</p>
<p>如果您想了解更多信息，這裡有一些有關打開文件的參考：</p>
<ul>
<li><a href="https://learnpythonthehardway.org/book/ex15.html">Learn Python the Hard Way page about reading files</a></li>
<li>在關於閱讀文件的困難方式頁面上學習Python</li>
<li>The Python 3.5 documentation about<span> </span><a href="https://docs.python.org/3.5/tutorial/inputoutput.html#reading-and-writing-files">reading and writing files</a></li>
<li>有關讀取和寫入文件的Python 3.5文檔</li>
</ul>
<p>Generating a random number</p>
<p>產生一個隨機數</p>
<p>Python’s<span> </span><code class="highlighter-rouge">random</code><span> </span>library is used to do operations with random numbers. For a list of the full methods available in the<span> </span><code class="highlighter-rouge">random</code><span> </span>library, check the<span> </span><a href="https://docs.python.org/3.5/library/random.html">Python 3 documentation of the random library</a>.</p>
<p>Python的隨機庫用於對隨機數進行運算。有關隨機庫中可用的完整方法的列表，請查看隨機庫的Python 3文檔。</p>
<p>The two methods that might be useful for this exercise are<span> </span><code class="highlighter-rouge">random.choice()</code><span> </span>or<span> </span><code class="highlighter-rouge">random.randint()</code>. The documentation is easy to read, so check out the docs for how these methods work!</p>
<p>對於本練習可能有用的兩個方法是random.choice（）或random.randint（）。該文檔易於閱讀，因此請查看文檔以了解這些方法的工作方式！</p>
<p>Happy coding!</p>
<p>祝您編碼愉快！</p>
<h2>HW3-36</h2>
<p></p>
<h3 id="exercise-30-and-solution">Exercise</h3>
<p>Birthday Plots<span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/> 生日情節</p>
<p>Exercise 36 (and<span> </span><a href="https://www.practicepython.org/solution/comingsoon">Solution</a>) 練習36（和解決方案）<br/><i></i></p>
<p><em>This exercise is Part 4 of 4 of the birthday data exercise series. The other exercises are:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/24/33-birthday-dictionaries.html">Part 1</a>,<span> </span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html">Part 2</a>, and<span> </span><a href="https://www.practicepython.org/exercise/2017/02/28/35-birthday-months.html">Part 3</a>.</em></p>
<p><em>此練習是生日數據練習系列4的第4部分。其他練習是：第1部分，第2部分和第3部分。</em></p>
<p>In the<span> </span><a href="https://www.practicepython.org/exercise/2017/02/28/35-birthday-months.html">previous exercise</a><span> </span>we counted how many birthdays there are in each month in our dictionary of birthdays.</p>
<p>在上一個練習中，我們在生日詞典中計算了每個月有多少個生日。</p>
<p>In this exercise, use the<span> </span><a href="http://bokeh.pydata.org/en/latest/">bokeh</a><span> </span>Python library to plot a histogram of which months the scientists have birthdays in! Because it would take a long time for you to input the months of various scientists, you can use<span> </span><a href="https://www.practicepython.org/assets/scientist_birthdays.json">my scientist birthday JSON file</a>. Just parse out the months (if you don’t know how, I suggest looking at the<span> </span><a href="https://www.practicepython.org/exercise/2017/02/28/35-birthday-months.html">previous exercise</a><span> </span>or<span> </span><a href="https://www.practicepython.org/solution/2017/03/19/35-birthday-months-solutions.html">its solution</a>) and draw your histogram.</p>
<p>在本練習中，使用bokeh Python庫繪製科學家在哪幾個月生日的直方圖！因為輸入多個科學家的時間會花費很長時間，所以可以使用我的科學家生日JSON文件。只需解析幾個月（如果您不知道如何做，我建議您查看上一個練習或其解決方案）並繪製直方圖。</p>
<p>If you are using a purely web-based interface for coding, this exercise won’t work for you, since it requires installing the<span> </span><code class="highlighter-rouge">bokeh</code><span> </span>Python package. Now might be a good time to<span> </span><a href="https://www.practicepython.org/blog/2017/03/24/install-python.html">install Python on your own computer</a>.</p>
<p>如果您使用的是純粹基於網絡的界面進行編碼，那麼此練習將對您不起作用，因為它需要安裝bokeh Python軟件包。現在可能是在自己的計算機上安裝Python的好時機。</p>
<p>Discussion 討論區</p>
<p>Today’s topic is going to be about the<span> </span><a href="http://bokeh.pydata.org/en/latest/">bokeh</a><span> </span>plotting library. We create plots and charts to display and communicate information from data, and it would be great to do that directly from Python. Sometimes it is really nice to write code or algorithms from scratch to learn and practice, and sometimes, someone has already written the code so well that you should use theirs. Bokeh is one of these libraries - it is library specifically with functions for making plots, charts, and graphs. It is based on the famous<span> </span><a href="https://d3js.org/">D3.js</a><span> </span>library originally developed at the<span> </span><em>New York Times</em><span> </span>for their visualizations, which has been used for many years to programmatically create visually appealing data visualizations.</p>
<p>今天的主題將是關於散景圖庫。我們創建繪圖和圖表以顯示和傳達數據中的信息，直接從Python中進行操作非常好。有時候從頭開始編寫代碼或算法來學習和實踐真的很棒，有時，有人已經寫好了代碼，應該使用他們的代碼。 Bokeh是這些庫之一-它是專門具有繪製圖表，圖表和圖形的函數的庫。它基於最初在《紐約時報》上開發的用於可視化的著名D3.js庫，該庫已被用於以編程方式創建具有視覺吸引力的數據可視化。</p>
<p>When to make plots 什麼時候作圖</p>
<p>We use plots to convey information. From this histogram:</p>
<p>我們使用圖來傳達信息。根據此直方圖：</p>
<p><img alt="US Government spending histogram" height="247" src="https://www.practicepython.org/assets/imgs/united-states-government-spending.png" width="530"/></p>
<p>美國政府支出直方圖</p>
<p>You can immediately see that the US government spending has been steadily increasing, reaching a peak in January 2017.</p>
<p>您可以立即看到，美國政府支出一直在穩定增長，在2017年1月達到峰值。</p>
<p>So learning how to make plots will help you become better at displaying and communicating information, both to yourself and to others.</p>
<p>因此，學習如何繪製情節將有助於您更好地顯示和與自己以及他人交流信息。</p>
<p>Plotting libraries in Python 用Python繪製庫</p>
<p>If you are looking for a plotting library in Python, you have two main options:<span> </span><a href="http://matplotlib.org/">matplotlib</a><span> </span>and<span> </span><a href="http://bokeh.pydata.org/en/latest/">bokeh</a>. Today I want to discuss bokeh, because I think it will become more popular in years to come.</p>
<p>如果要在Python中尋找繪圖庫，則有兩個主要選項：matplotlib和bokeh。今天，我想討論散景，因為我認為它會在未來幾年變得越來越流行。</p>
<p>Many Python developers (and especially data scientists and researchers) will tell you that the most commonly used plotting library in Python is<span> </span><a href="http://matplotlib.org/">matplotlib</a>. I myself was a matplotlib user for many years - the integrations with Python data libraries are great, and migrating from the MATLAB plotting environment to matplotlib is easy. But a friend introduced me to bokeh and I was hooked ever since. Because it is based on D3.js, the visualizations look smooth and professional.</p>
<p>許多Python開發人員（尤其是數據科學家和研究人員）會告訴您，Python中最常用的繪圖庫是matplotlib。我本人是matplotlib用戶多年，與Python數據庫的集成非常好，並且從MATLAB繪圖環境遷移到matplotlib很容易。但是一個朋友向我介紹了散景，從那時起我就迷上了。由於它基於D3.js，因此可視化效果看起來既流暢又專業。</p>
<p>There is no one “best” plotting library - you should use whichever one feels and looks better for you. But for the rest of this post, I’ll talk about how to use bokeh to make a basic plot.</p>
<p>沒有一個“最佳”繪圖庫-您應該使用對您而言感覺更好的一種。但是，在本文的其餘部分中，我將討論如何使用bokeh進行基本繪圖。</p>
<p>Installing bokeh 安裝背景虛化</p>
<p>To use bokeh, we first have to install it. Unlike something like<span> </span><a href="https://docs.python.org/3/library/json.html"><code class="highlighter-rouge">json</code></a><span> </span>or<span> </span><a href="https://docs.python.org/3/library/collections.html#collections.Counter"><code class="highlighter-rouge">Counter</code></a><span> </span>from previous exercises, bokeh does not come installed with Python.</p>
<p>要使用bokeh，我們首先必須安裝它。與以前的練習中的json或Counter之類的東西不同，Python不附帶bokeh。</p>
<p>If you are using the<span> </span><a href="https://www.continuum.io/downloads">Anaconda Python</a><span> </span>distribution (which you should, if you are on Windows!) then you can install bokeh by typing</p>
<p>如果使用的是Anaconda Python發行版（如果在Windows上，則應使用該發行版），然後可以通過鍵入來安裝bokeh</p>
<pre><code class="language-bash" data-lang="bash">conda install bokeh                              康達安裝散景</code></pre>
<p>in the Windows command prompt or the bash shell.  在Windows命令提示符或bash shell中。</p>
<p>On OSX or GNU / Linux, just type                            在OSX或GNU / Linux上，只需鍵入</p>
<pre><code class="language-bash" data-lang="bash">pip3 install bokeh                               </code><code class="language-bash" data-lang="bash">pip3安裝散景</code></pre>
<p>(If you have are using Python 2, you should do<span> </span><code class="highlighter-rouge">pip install bokeh</code>.)</p>
<p>（如果您使用的是Python 2，則應執行pip install bokeh。）</p>
<p>Using bokeh 使用散景</p>
<p>The basic idea of any plotting package is simple:</p>
<p>任何繪圖程序包的基本思想都很簡單：</p>
<ol>
<li>Load the data      加載數據</li>
<li>Display the data   顯示數據</li>
</ol>
<p>So the first thing you have to do is prepare some data. Usually, when you are plotting data you have two axes, or groups of data, an x-axis (or horizontal axis) and a y-axis (or vertical axis). The<span> </span><code class="highlighter-rouge">x</code><span> </span>variable is your input (independent) variable and the<span> </span><code class="highlighter-rouge">y</code><span> </span>variable is your output (dependent) variable.</p>
<p>因此，您要做的第一件事是準備一些數據。通常，在繪製數據時，您有兩個軸或一組數據，分別是x軸（或水平軸）和y軸（或垂直軸）。 x變量是您的輸入（獨立）變量，y變量是您的輸出（獨立）變量。</p>
<p>For use in bokeh, your data should be loaded into two separate lists, one for the x-axis and one for the y-axis. The basic format of a bokeh (in this case histogram) looks like this:</p>
<p>為了在bokeh中使用，您的數據應加載到兩個單獨的列表中，一個用於x軸，一個用於y軸。散景的基本格式（在本例中為直方圖）如下所示：</p>
<pre><code class="language-python" data-lang="python"><span class="c"># need to import at least 3 things to make your        ＃需要至少導入3件事才能使您的</span>
<span class="c"># bokeh plots work                                     ＃散景圖工作</span>
<span class="kn">from</span> <span class="nn">bokeh.plotting</span> <span class="kn">import</span> <span class="n">figure</span><span class="p">,</span> <span class="n">show</span><span class="p">,</span> <span class="n">output_file   來自bokeh.plotting導入圖，顯示，output_file</span>

<span class="c"># we specify an HTML file where the output will go     ＃我們指定一個HTML文件，輸出將在其中</span>
<span class="n">output_file</span><span class="p">(</span><span class="s">"plot.html"</span><span class="p">)                                output_file（“ plot.html”）</span>

<span class="c"># load our x and y data                                ＃加載我們的x和y數據</span>
<span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">]                                        x = [10，20，30]</span>
<span class="n">y</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]                                           y = [4，5，6]</span>

<span class="c"># create a figure                                      ＃創建一個人物</span>
<span class="n">p</span> <span class="o">=</span> <span class="n">figure</span><span class="p">()                                            p =數字（）</span>

<span class="c"># create a histogram                                   ＃創建直方圖</span>
<span class="n">p</span><span class="o">.</span><span class="n">vbar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">,</span> <span class="n">top</span><span class="o">=</span><span class="n">y</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)                           p.vbar（x = x，top = y，寬度= 0.5）</span>

<span class="c"># render (show) the plot                               ＃渲染（顯示）情節</span>
<span class="n">show</span><span class="p">(</span><span class="n">p</span><span class="p">)                                                顯示（p）</span></code></pre>
<p>The way bokeh outputs plots is really cool: when you run a piece of bokeh code, it outputs the result into an HTML file that you can then save and display in a web browser on it’s own. After you run this segment on top, it will automatically open a web browser and show you a plot.</p>
<p>散景輸出圖的方式真的很酷：運行一段散景代碼時，它將結果輸出到HTML文件中，然後您可以將其保存並單獨顯示在網絡瀏覽器中。在頂部運行此段後，它將自動打開Web瀏覽器並顯示圖。</p>
<p>One awesome feature of Bokeh is that it gives you a toolbar you can use to play with the graph - moving it around, zooming out, saving it, etc. Plus, you can put it directly into am HTML page!</p>
<p>Bokeh的一項令人敬畏的功能是，它為您提供了一個可用於處理圖形的工具欄-進行移動，縮放，保存等。此外，您可以將其直接放入HTML頁面！</p>
<p>It will look something like this:</p>
<p>它看起來像這樣：</p>
<p><img alt="" height="208" src="/images/HW3-36-exercise1.PNG" width="272"/></p>
<p>The example above works when<span> </span><code class="highlighter-rouge">x</code><span> </span>is a numerical value. But, in the exercise, we are dealing with months, which is called a “categorical” variable (i.e. it belongs to a category, and is not continuous). To make sure bokeh draws the axis correctly, you need to specify a special call to<span> </span><code class="highlighter-rouge">figure()</code><span> </span>to pass an<span> </span><code class="highlighter-rouge">x_range</code>, like so:</p>
<div class="bk-plot-layout bk-layout-fixed" id="modelid_ae08d56f-af3d-4335-a117-c4ba6a1b4225">
<div class="bk-toolbar-wrapper bk-layout-null" id="modelid_d9f4290f-5eec-4bca-a125-d312f108651b">
<div class="bk-toolbar-right bk-toolbar-sticky"><a class="bk-logo bk-logo-small" href="http://bokeh.pydata.org/" target="_blank"></a>
<div class="bk-button-bar">
<div class="bk-button-bar-list" type="pan">
<div class="bk-toolbar-button bk-active">
<div class="bk-btn-icon bk-tool-icon-pan">當x是數字值時，以上示例適用。但是，在練習中，我們要處理幾個月，這被稱為“類別”變量（即，它屬於一個類別，並且不是連續的）。為了確保bokeh正確繪製軸，您需要指定對fig（）的特殊調用以傳遞x_range，如下所示：</div>
</div>
</div>
</div>
</div>
</div>
</div>
<pre><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">bokeh.plotting</span> <span class="kn">import</span> <span class="n">figure</span><span class="p">,</span> <span class="n">show</span><span class="p">,</span> <span class="n">output_file<br/>來自bokeh.plotting導入圖，顯示，output_file</span><br/>
<span class="n">output_file</span><span class="p">(</span><span class="s">"plot.html"</span><span class="p">)</span>
<span class="n">x_categories</span> <span class="o">=</span> <span class="p">[</span><span class="s">"a"</span><span class="p">,</span> <span class="s">"b"</span><span class="p">,</span> <span class="s">"c"</span><span class="p">,</span> <span class="s">"d"</span><span class="p">,</span> <span class="s">"e"</span><span class="p">]</span>
<span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="s">"a"</span><span class="p">,</span> <span class="s">"d"</span><span class="p">,</span> <span class="s">"e"</span><span class="p">]</span>
<span class="n">y</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>

<span class="n">p</span> <span class="o">=</span> <span class="n">figure</span><span class="p">(</span><span class="n">x_range</span><span class="o">=</span><span class="n">x_categories</span><span class="p">)  p =圖形（x_range = x_categories）</span>
<span class="n">p</span><span class="o">.</span><span class="n">vbar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">,</span> <span class="n">top</span><span class="o">=</span><span class="n">y</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)     p.vbar（x = x，top = y，寬度= 0.5）</span>

<span class="n">show</span><span class="p">(</span><span class="n">p</span><span class="p">)                           顯示（p）</span></code></pre>
<p>Here’s what this one looks like:</p>
<p>這是這樣的：</p>
<p><img alt="" height="210" src="/images/HW3-36-exercise2.PNG" width="275"/></p>
<p>There are also extra commands and arguments you can pass to bokeh to display an title for the plot, for each of the axis, for the color of the bars, and so on.</p>
<div class="bk-plot-layout bk-layout-fixed" id="modelid_5ac61c92-da7f-443c-afe1-86ee485b22a8">
<div class="bk-toolbar-wrapper bk-layout-null" id="modelid_595835db-b1e5-42ed-8dce-df558d525170">
<div class="bk-toolbar-right bk-toolbar-sticky"><a class="bk-logo bk-logo-small" href="http://bokeh.pydata.org/" target="_blank"></a>
<div class="bk-button-bar">
<div class="bk-button-bar-list" type="pan">
<div class="bk-toolbar-button bk-active">
<div class="bk-btn-icon bk-tool-icon-pan">您還可以傳遞給bokeh額外的命令和參數，以顯示繪圖的標題，每個軸的標題，條形的顏色等等。</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>If you want to dive deep into that documentation, check out these resources:</p>
<p>如果您想深入了解該文檔，請查看以下資源：</p>
<ul>
<li><a href="http://bokeh.pydata.org/en/latest/docs/user_guide/plotting.html#bars">Bar plots / histograms</a> 條形圖/直方圖</li>
<li><a href="http://bokeh.pydata.org/en/latest/docs/user_guide/plotting.html#categorical-axes">Categorical axes</a> 分類軸</li>
<li><a href="http://bokeh.pydata.org/en/latest/docs/user_guide/styling.html">Everything to do with styling plots</a> 與樣式圖有關的一切</li>
<li><a href="http://bokeh.pydata.org/en/latest/docs/user_guide/plotting.html">Basic plotting for other types of graphs</a> 其他類型圖形的基本繪圖</li>
</ul>
<p>If you want to add more flair to your histogram from this exercise, there are many resources on the web to help you out!</p>
<p>如果您想通過此練習為直方圖增加更多個性，網絡上有很多資源可以幫助您！</p>
<p>Happy coding!</p>
<p>祝您編碼愉快！</p>
<h1>測試</h1>
<p>pull requests</p>